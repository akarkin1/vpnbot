# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: VPN Bot Lambda CI-CD

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/main/java/**'
      - 'src/main/resources/**'
      - '.github/workflows/ci-cd.yml'
    branches:
      - main

jobs:
  ci-cd-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4

    - name: Set Up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build Lambda
      run: mvn clean package shade:shade
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-north-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Upload Artifact To S3
      run: aws s3 cp target/vpnbot-1.0-SNAPSHOT.jar s3://openvpn-server-s3/openvpn-server-tgbot/vpnbot-1.0-SNAPSHOT.jar

    - name: Update AWS Lambda
      run: |
        aws lambda update-function-code --function-name openvpn-server-tgbot --s3-bucket openvpn-server-s3 --s3-key openvpn-server-tgbot/vpnbot-1.0-SNAPSHOT.jar
      
