AWSTemplateFormatVersion: '2010-09-09'
Description: Tailscale Node Stack

Parameters:
  ClientIPCIDR:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR IP to be granted access by the SG, use 0.0.0.0/0 to accept all IPs.
  VpcCidrBlock:
    Type: String
    Default: 10.1.0.0/28
    Description: CIDR IP to be granted access by the SG, use 0.0.0.0/0 to accept all IPs.
  EcsClusterName:
    Type: String
    Description: Name of the ECS Cluster to be hosting VPN Server tasks.
  EcrRepositoryName:
    Type: String
    Description: Name of the ECS Cluster to be hosting VPN Server tasks.
  EcsTaskDefinitionName:
    Type: String
    Description: Task Definition name
    Default: tailscale-node-task-def
  TailscaleAuthTokenSecretId:
    Type: String
    Description: Id of Tailscale Auth Key Secret in Secret Manager.
  TailscaleAuthTokenSecretRegion:
    Type: String
    Description: AWS Region, where the secret with Tailscale Auth Key is stored within the account.
  TailscaleInactivityTimeoutSeconds:
    Type: String
    Description: Number of seconds without active connections to wait before stop the Tailscale task.
    Default: 600
  StatusCheckIntervalSeconds:
    Type: String
    Description: Interval in seconds between active connections checks.
    Default: 60
  TailscaleNodeMemory:
    Type: String
    Description: How much memory units need to be allocated for a Tailscale task.
    Default: 1024
  TailscaleNodeCpu:
    Type: String
    Description: How much CPU units need to be allocated for a Tailscale task.
    Default: 512


Resources:
  TailscaleNodeVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: tailscale-node-vpnc
        - Key: ServiceName
          Value: tailscale-node

  TailscaleNodeInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: tailscale-node-internet-gw
        - Key: ServiceName
          Value: tailscale-node

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref TailscaleNodeVPC
      InternetGatewayId: !Ref TailscaleNodeInternetGateway

  TailscaleNodePublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TailscaleNodeVPC
      CidrBlock: !Ref VpcCidrBlock
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: tailscale-node-public-sn
        - Key: ServiceName
          Value: tailscale-node

  TailscaleNodeRouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TailscaleNodeVPC
      Tags:
        - Key: Name
          Value: tailscale-node-rt
        - Key: ServiceName
          Value: tailscale-node

  RouteDefaultPublic:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      DestinationCidrBlock: !Ref ClientIPCIDR
      GatewayId: !Ref TailscaleNodeInternetGateway
      RouteTableId: !Ref TailscaleNodeRouteTablePublic

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref TailscaleNodePublicSubnet
      RouteTableId: !Ref TailscaleNodeRouteTablePublic

  TailscaleNodeEcsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for Tailscale Node
      VpcId: !Ref TailscaleNodeVPC
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort: 41641
          ToPort: 41641
          CidrIp: !Ref ClientIPCIDR  # Tailscale default port

  TailscaleNodeEcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref EcrRepositoryName

  TailscaleNodeEcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref EcsClusterName
      Tags:
        - Key: ServiceName
          Value: tailscale-node

  TailscaleNodeEcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  TailscaleNodeEcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  ECRPullPolicy:
    DependsOn:
      - TailscaleNodeEcsTaskExecutionRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ECRPullPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:GetAuthorizationToken"
            Resource: '*'
      Roles:
        - !Ref TailscaleNodeEcsTaskExecutionRole

  CWPermissionsPolicy:
    DependsOn:
      - TailscaleNodeEcsTaskExecutionRole
      - TailscaleNodeEcsTaskRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CWPermissionsPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"
      Roles:
        - !Ref TailscaleNodeEcsTaskExecutionRole
        - !Ref TailscaleNodeEcsTaskRole

  NetworkingPermissionsPolicy:
    DependsOn:
      - TailscaleNodeEcsTaskExecutionRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NetworkingPermissionsPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "ec2:DescribeSubnets"
              - "ec2:DescribeVpcs"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DescribeNetworkInterfaces"
              - "ec2:CreateNetworkInterface"
              - "ec2:DeleteNetworkInterface"
              - "ec2:AssignPrivateIpAddresses"
              - "ec2:UnassignPrivateIpAddresses"
            Resource: "*"
      Roles:
        - !Ref TailscaleNodeEcsTaskExecutionRole

  AllowContainerMetadataAccess:
    DependsOn:
      - TailscaleNodeEcsTaskRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ContainerMetadataAccessPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'ecs:DescribeTasks'
              - 'ecs:ListClusters'
              - 'ecs:ListTasks'
              - 'ecs:DescribeClusters'
            Resource: "*"
      Roles:
        - !Ref TailscaleNodeEcsTaskRole
          
  AllowAuthTokenSecretAccess:
    DependsOn:
      - TailscaleNodeEcsTaskRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ContainerMetadataAccessPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'secretsmanager:GetSecretValue'
            Resource: !Sub "arn:aws:secretsmanager:${TailscaleAuthTokenSecretRegion}:${AWS::AccountId}:secret:${TailscaleAuthTokenSecretId}*"
      Roles:
        - !Ref TailscaleNodeEcsTaskRole

  TailscaleNodeEcsTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/tailscale-node-task-def-lg
      RetentionInDays: 1

  TailscaleNodeEcsTaskDefinition:
    DependsOn:
      - TailscaleNodeEcrRepository
      - TailscaleNodeEcsTaskExecutionRole
      - TailscaleNodeEcsTaskRole
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref EcsTaskDefinitionName
      RequiresCompatibilities:
        - FARGATE
      Cpu: !Ref TailscaleNodeCpu
      Memory: !Ref TailscaleNodeMemory
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TailscaleNodeEcsTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TailscaleNodeEcsTaskRole.Arn
      ContainerDefinitions:
        - Name: vpn-container
          Essential: true
          Image: !Join [':', [!GetAtt TailscaleNodeEcrRepository.RepositoryUri, 'latest']]
          Cpu: !Ref TailscaleNodeCpu
          Memory: !Ref TailscaleNodeMemory
          HealthCheck:
            Command:
              - CMD-SHELL
              - 'tailscale status | grep "logged in" || exit 1'
            Interval: 30
            Timeout: 60
            Retries: 3
          PortMappings:
            # Tailscale Port
            - ContainerPort: 41641
              HostPort: 41641
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref TailscaleNodeEcsTaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: tailscale-node-task
          Environment:
            - Name: TAILSCALE_TOKEN_SECRET_ID
              Value: !Ref TailscaleAuthTokenSecretId
            - Name: TAILSCALE_TOKEN_SECRET_REGION
              Value: !Ref TailscaleAuthTokenSecretRegion
            - Name: INACTIVITY_TIMEOUT
              Value: !Ref TailscaleInactivityTimeoutSeconds
            - Name: STATUS_CHECK_INTERVAL
              Value: !Ref StatusCheckIntervalSeconds
      Tags:
        - Key: Name
          Value: !Ref EcsTaskDefinitionName
        - Key: ServiceName
          Value: tailscale-node

Outputs:
  EcsTaskRoleArn:
    Description: Role ARN for an ECS Task to create.
    Value: !GetAtt TailscaleNodeEcsTaskRole.Arn
  EcsTaskExecutionRoleArn:
    Description: Role ARN for an ECS Task to create.
    Value: !GetAtt TailscaleNodeEcsTaskExecutionRole.Arn
  EcrRepositoryUrl:
    Description: Url of the created ECR repository, where Docker images with VPN Server will be stored.
    Value: !GetAtt TailscaleNodeEcrRepository.RepositoryUri
  EcsTaskDefinitionArn:
    Description: Arn of created ECS Task Definition.
    Value: !GetAtt TailscaleNodeEcsTaskDefinition.TaskDefinitionArn
  EcsClusterName:
    Description: The name of ECS cluster, where a VPN task will be spin out.
    Value: !Ref TailscaleNodeEcsCluster
  SubnetId:
    Description: ID of the Subnet, where an ECS Task will be launched.
    Value: !GetAtt TailscaleNodePublicSubnet.SubnetId
  SecurityGroupId:
    Description: ID of the Subgroup, which an ECS Task will be launched with.
    Value: !GetAtt TailscaleNodeEcsSG.GroupId