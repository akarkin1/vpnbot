AWSTemplateFormatVersion: '2010-09-09'
Description: OpenVPN Server Stack

Parameters:
  ClientIPCIDR:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR IP to be granted access by the SG, use 0.0.0.0/0 to accept all IPs
  VpcCidrBlock:
    Type: String
    Default: 10.1.0.0/28
    Description: CIDR IP to be granted access by the SG, use 0.0.0.0/0 to accept all IPs
  AwsDnsAddressInSubnet:
    Type: String
    Default: 10.1.0.2
    Description: CIDR IP to be granted access by the SG, use 0.0.0.0/0 to accept all IPs
  EcsClusterName:
    Type: String
    Description: Name of the ECS Cluster to be hosting VPN Server tasks
  EcrRepositoryName:
    Type: String
    Description: Name of the ECS Cluster to be hosting VPN Server tasks
  EcsTaskDefinitionName:
    Type: String
    Description: Task Definition name
    Default: openvpn-server-task-def
  EcsTaskDanteUsername:
    Type: String
    Description: Username to be used to connect to Dante Proxy via which VPN connection goes
    Default: openvpn-user
  EcsTaskDantePasswordSecret:
    Type: String
    Description: SSM Secret where password to Dante Proxy will be stored required for establish client connection to VPN
    NoEcho: true


Resources:
  OpenVpnVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: openvpn-server-vpnc
        - Key: ServiceName
          Value: openvpn-server

  OpenVpnInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: openvpn-server-internet-gw
        - Key: ServiceName
          Value: openvpn-server

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref OpenVpnVPC
      InternetGatewayId: !Ref OpenVpnInternetGateway

  OpenVpnPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref OpenVpnVPC
      CidrBlock: !Ref VpcCidrBlock
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: openvpn-server-public-sn
        - Key: ServiceName
          Value: openvpn-server

  OpenVpnRouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref OpenVpnVPC
      Tags:
        - Key: Name
          Value: openvpn-server-rt
        - Key: ServiceName
          Value: openvpn-server

  RouteDefaultPublic:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      DestinationCidrBlock: !Ref ClientIPCIDR
      GatewayId: !Ref OpenVpnInternetGateway
      RouteTableId: !Ref OpenVpnRouteTablePublic

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref OpenVpnPublicSubnet
      RouteTableId: !Ref OpenVpnRouteTablePublic

  OpenVpnEcsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for OpenVPN Server
      VpcId: !Ref OpenVpnVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          CidrIp: !Ref ClientIPCIDR
        - IpProtocol: udp
          FromPort: 1194
          ToPort: 1194
          CidrIp: !Ref ClientIPCIDR
        - IpProtocol: tcp
          FromPort: 1194
          ToPort: 1194
          CidrIp: !Ref ClientIPCIDR
        - IpProtocol: tcp
          FromPort: 943
          ToPort: 943
          CidrIp: !Ref ClientIPCIDR
        - IpProtocol: tcp
          FromPort: 945
          ToPort: 945
          CidrIp: !Ref ClientIPCIDR
        - IpProtocol: tcp
          FromPort: 1080
          ToPort: 1080
          CidrIp: !Ref ClientIPCIDR
      SecurityGroupEgress:
        - Description: Allow all outbound traffic
          IpProtocol: "-1"
          CidrIp: !Ref ClientIPCIDR

  OpenVpnEfsFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      LifecyclePolicies:
        - TransitionToIA: 'AFTER_30_DAYS'

  OpenVpnAccessPoint:
    DependsOn: OpenVpnEfsFileSystem
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref OpenVpnEfsFileSystem
      PosixUser:
        Gid: '1000'
        Uid: '1000'
      RootDirectory:
        CreationInfo:
          OwnerGid: '1000'
          OwnerUid: '1000'
          Permissions: '755'
        Path: '/vpn-server-userdata'

  OpenVpnEcsTaskMountTarget:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref OpenVpnEfsFileSystem
      SubnetId: !Ref OpenVpnPublicSubnet
      SecurityGroups:
        - !Ref OpenVpnEcsSG

  OpenVpnEcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref EcrRepositoryName

  OpenVpnEcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref EcsClusterName
      Tags:
        - Key: ServiceName
          Value: vpn-server

  VpnServerEcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  VpnServerEcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  ECRPullPolicy:
    DependsOn:
      - VpnServerEcsTaskExecutionRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ECRPullPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:GetAuthorizationToken"
            Resource: '*'
      Roles:
        - !Ref VpnServerEcsTaskExecutionRole

  EFSPermissionsPolicy:
    DependsOn:
      - VpnServerEcsTaskExecutionRole
      - VpnServerEcsTaskRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EFSPermissionsPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "elasticfilesystem:ClientMount"
              - "elasticfilesystem:ClientWrite"
              - "elasticfilesystem:ClientRootAccess"
              - "elasticfilesystem:DescribeFileSystems"
              - "elasticfilesystem:DescribeMountTargets"
              - "elasticfilesystem:DescribeAccessPoints"
            Resource: '*'
      Roles:
        - !Ref VpnServerEcsTaskExecutionRole
        - !Ref VpnServerEcsTaskRole

  CWPermissionsPolicy:
    DependsOn:
      - VpnServerEcsTaskExecutionRole
      - VpnServerEcsTaskRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CWPermissionsPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"
      Roles:
        - !Ref VpnServerEcsTaskExecutionRole
        - !Ref VpnServerEcsTaskRole

  NetworkingPermissionsPolicy:
    DependsOn:
      - VpnServerEcsTaskExecutionRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NetworkingPermissionsPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "ec2:DescribeSubnets"
              - "ec2:DescribeVpcs"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DescribeNetworkInterfaces"
              - "ec2:CreateNetworkInterface"
              - "ec2:DeleteNetworkInterface"
              - "ec2:AssignPrivateIpAddresses"
              - "ec2:UnassignPrivateIpAddresses"
            Resource: "*"
      Roles:
        - !Ref VpnServerEcsTaskExecutionRole

  AllowContainerMetadataAccess:
    DependsOn:
      - VpnServerEcsTaskRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ContainerMetadataAccessPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'ecs:DescribeTasks'
              - 'ecs:ListClusters'
              - 'ecs:ListTasks'
              - 'ecs:DescribeClusters'
            Resource: "*"
      Roles:
        - !Ref VpnServerEcsTaskRole

  OpenVpnEcsTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/openvpn-server-task-def-lg
      RetentionInDays: 7

  OpenVpnEcsTaskDefinition:
    DependsOn:
      - OpenVpnEcrRepository
      - VpnServerEcsTaskExecutionRole
      - VpnServerEcsTaskRole
      - OpenVpnEfsFileSystem
      - OpenVpnAccessPoint
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref EcsTaskDefinitionName
      RequiresCompatibilities:
        - FARGATE
      Cpu: '512'
      Memory: '1024'
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt VpnServerEcsTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt VpnServerEcsTaskRole.Arn
      ContainerDefinitions:
        - Name: vpn-container
          Essential: true
          Image: !Join [':', [!GetAtt OpenVpnEcrRepository.RepositoryUri, 'latest']]
          Memory: 1024
          Cpu: 512
          LinuxParameters:
            InitProcessEnabled: true
          MountPoints:
            - SourceVolume: 'UserDataEfsVolume'
              ContainerPath: '/mnt/efs'
          PortMappings:
            # OpenVPN Port
            - ContainerPort: 1194
              Protocol: tcp
            - ContainerPort: 1194
              Protocol: udp
            - ContainerPort: 1080
              Protocol: tcp
            # Port for EFS
            - ContainerPort: 2049
            # Other ports for VPN server, like port for Admin UI
            - ContainerPort: 943
            - ContainerPort: 945
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref OpenVpnEcsTaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: openvpn-server-task
          Environment:
            # flag indicates that a container run in ECS, so the init script can call Metadata URI
            # to receive container's public IP
            - Name: RUN_IN_ECS
              Value: '1'
            - Name: MAX_CONNECTION_WAIT_TIME_MIN
              Value: '5'
            - Name: SUBNET_CIDR
              Value: !Ref VpcCidrBlock
            - Name: AWS_DNS_SERVER_IP
              Value: !Ref AwsDnsAddressInSubnet
            - Name: DANTE_PROXY_USERNAME
              Value: !Ref EcsTaskDanteUsername
            - Name: DANTE_PROXY_PASSWORD
              Value: !Sub "{{resolve:secretsmanager:${EcsTaskDantePasswordSecret}}}"
      Volumes:
        - Name: 'UserDataEfsVolume'
          EFSVolumeConfiguration:
            FileSystemId: !GetAtt OpenVpnEfsFileSystem.FileSystemId
            TransitEncryption: 'ENABLED'
            AuthorizationConfig:
              AccessPointId: !GetAtt OpenVpnAccessPoint.AccessPointId
      Tags:
        - Key: Name
          Value: !Ref EcsTaskDefinitionName
        - Key: ServiceName
          Value: openvpn-server

Outputs:
  EcsTaskRoleArn:
    Description: Role ARN for an ECS Task to create.
    Value: !GetAtt VpnServerEcsTaskRole.Arn
  EcsTaskExecutionRoleArn:
    Description: Role ARN for an ECS Task to create.
    Value: !GetAtt VpnServerEcsTaskExecutionRole.Arn
  EcrRepositoryUrl:
    Description: Url of the created ECR repository, where Docker images with VPN Server will be stored.
    Value: !GetAtt OpenVpnEcrRepository.RepositoryUri
  EcsTaskDefinitionArn:
    Description: Arn of created ECS Task Definition.
    Value: !GetAtt OpenVpnEcsTaskDefinition.TaskDefinitionArn
  SubnetId:
    Description: ID of the Subnet, where an ECS Task will be launched.
    Value: !GetAtt OpenVpnPublicSubnet.SubnetId
  SecurityGroupId:
    Description: ID of the Subgroup, which an ECS Task will be launched with.
    Value: !GetAtt OpenVpnEcsSG.GroupId
  EfsFileSystemId:
    Description: ID of the EFS system to be attached to an ECS Task.
    Value: !GetAtt OpenVpnEfsFileSystem.FileSystemId
  EfsAccessPointId:
    Description: ID of the Access Point to be associated with mounting volume of an ECS Task.
    Value: !GetAtt OpenVpnAccessPoint.AccessPointId